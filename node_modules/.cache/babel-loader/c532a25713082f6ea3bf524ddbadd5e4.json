{"ast":null,"code":"import _toConsumableArray from \"D:/\\u684C\\u9762/\\u6587\\u4EF6/\\u524D\\u7AEF/vue/9.supermall/supermall1/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport HomeSwiper from \"./childComps/HomeSwiper\"; //导入子组件\n\nimport RecommendView from \"./childComps/RecommendView\";\nimport FeatureView from \"./childComps/FeatureView\";\nimport NavBar from \"components/common/navbar/NavBar.vue\"; //导入公共组件\n\nimport TabControl from \"components/content/TabControl/TabControl\";\nimport GoodsList from \"components/content/goods/GoodsList\";\nimport Scroll from \"components/common/scroll/Scroll\";\nimport { getHomeMultidata as _getHomeMultidata, getHomeGoods as _getHomeGoods } from \"network/home\"; //网络请求 /*用大括号导出是因为，导出的时候没有用default*/\n\nexport default {\n  name: \"Home\",\n  components: {\n    NavBar: NavBar,\n    HomeSwiper: HomeSwiper,\n    RecommendView: RecommendView,\n    FeatureView: FeatureView,\n    TabControl: TabControl,\n    GoodsList: GoodsList,\n    Scroll: Scroll\n  },\n  data: function data() {\n    return {\n      banners: [],\n      recommends: [],\n      goods: {\n        //保存的是首页商品数据，包括流行，新款和精选 一起请求过来\n        'pop': {\n          page: 0,\n          list: []\n        },\n        'new': {\n          page: 0,\n          list: []\n        },\n        'sell': {\n          page: 0,\n          list: []\n        }\n      },\n      currentType: 'pop'\n    };\n  },\n  computed: {\n    showGoods: function showGoods() {\n      return this.goods[this.currentType].list;\n    }\n  },\n  created: function created() {\n    /*首页创建之后发送网络请求,尽量只放一些主要逻辑，具体实现方法放到methods里面， 只要调用一下就行*/\n    //1.请求多个数据\n    this.getHomeMultidata(), //加了this,代表调用的是下面的方法，而不是传入的的网络请求getHomeMultidata\n    //2.请求商品数据\n    this.getHomeGoods('pop'), //一次性调用三次方法，分别把流行，新款和精选的第一页都请求过来\n    this.getHomeGoods('new'), this.getHomeGoods('sell');\n  },\n  methods: {\n    //事件监听相关方法\n    tabClick: function tabClick(index) {\n      switch (index) {\n        case 0:\n          this.currentType = 'pop'; //上面定义的变量\n\n          break;\n\n        case 1:\n          this.currentType = 'new';\n          break;\n\n        case 2:\n          this.currentType = 'sell';\n          break;\n      }\n    },\n    //网络请求相关方法\n    getHomeMultidata: function getHomeMultidata() {\n      var _this = this;\n\n      _getHomeMultidata().then( //调用home.js封装的函数，获取url\n      function (res) {\n        //res会拿到请求的结果\n        _this.banners = res.data.data.banner.list;\n        _this.recommends = res.data.data.recommend.list;\n      });\n    },\n    getHomeGoods: function getHomeGoods(type) {\n      var _this2 = this;\n\n      //传入type,类型就可以不写死，后面可以再传入\n      var page = this.goods[type].page + 1; //page也不要写死，做下拉操作的时候每次page要加1 goods是对象，获取对象属性是变量用[]\n\n      _getHomeGoods(type, page).then( //传入类型是pop，页码为1的商品数据\n      function (res) {\n        var _this2$goods$type$lis;\n\n        //res里面装得是类型为pop,page=1也就是30页的内容\n        (_this2$goods$type$lis = _this2.goods[type].list).push.apply(_this2$goods$type$lis, _toConsumableArray(res.data.data.list)); //拿到data中类型为pop的空数组，压入page=1中的数据内容\n\n\n        _this2.goods[type].page += 1; //原来page=0,下次复用这个方法的时候应该使page加1\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAgBA,iD,CAAA;;AACA;AACA;AAEA,yD,CAAA;;AACA;AACA;AACA;AAGA,oG,CAAA;;AAGA;AACAA,cADA;AAEAC;AACAC,kBADA;AAEAC,0BAFA;AAGAC,gCAHA;AAIAC,4BAJA;AAKAC,0BALA;AAMAC,wBANA;AAOAC;AAPA,GAFA;AAWAC,MAXA,kBAWA;AACA;AACAC,iBADA;AAEAC,oBAFA;AAGAC;AAAA;AACA;AAAAC;AAAAC;AAAA,SADA;AAEA;AAAAD;AAAAC;AAAA,SAFA;AAGA;AAAAD;AAAAC;AAAA;AAHA,OAHA;AAQAC;AARA;AAUA,GAtBA;AAuBAC;AACAC,aADA,uBACA;AACA;AACA;AAHA,GAvBA;AA4BAC,SA5BA,qBA4BA;AAAA;AACA;AACA;AACA;AACA,4BAFA,EAEA;AACA,4BAHA,EAIA,yBAJA;AAKA,GAnCA;AAoCAC;AACA;AACAC,YAFA,oBAEAC,KAFA,EAEA;AACA;AACA;AACA,mCADA,CACA;;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AATA;AAYA,KAfA;AAiBA;AACAC,oBAlBA,8BAkBA;AAAA;;AACAA;AACA;AAAA;AACA;AACA;AACA,OAJA;AAIA,KAvBA;AAwBAC,gBAxBA,wBAwBAC,IAxBA,EAwBA;AAAA;;AAAA;AACA,2CADA,CACA;;AACAD;AACA;AAAA;;AAAA;AACA,oIADA,CACA;;;AACA,qCAFA,CAEA;AACA,OAJA;AAKA;AA/BA;AApCA","names":["name","components","NavBar","HomeSwiper","RecommendView","FeatureView","TabControl","GoodsList","Scroll","data","banners","recommends","goods","page","list","currentType","computed","showGoods","created","methods","tabClick","index","getHomeMultidata","getHomeGoods","type"],"sourceRoot":"src/views/home","sources":["Home.vue"],"sourcesContent":["<template>\n<div id=\"home\" class=\"wrapper\">\n  <nav-bar class=\"home-nav\"><div  slot=\"center\">购物街</div></nav-bar>\n  <scroll class=\"content\"><!--里面放入可滚动的内容-->\n  <home-swiper :banners=\"banners\"></home-swiper>\n  <recommend-view :recommends=\"recommends\"></recommend-view> <!--省略掉冒号代表传入的是字符串，带冒号传入的是数组 -->\n  <feature-view></feature-view>\n  <tab-control class=\"tab-control\" :titles=\"['流行','新款','精选']\"\n               @tabClick=\"tabClick\"></tab-control><!--只有首页需要做吸顶效果，其他页面引用TabControl不需要 -->\n  <goods-list :goods=\"showGoods\"></goods-list><!--从pop里面取出List赋值给goods --> <!--监听的是TabControl中tabClick事件 -->\n  </scroll>\n\n</div>\n</template>\n\n<script>\n  import HomeSwiper from \"./childComps/HomeSwiper\"; //导入子组件\n  import RecommendView from \"./childComps/RecommendView\";\n  import FeatureView from \"./childComps/FeatureView\";\n\n  import NavBar from \"components/common/navbar/NavBar.vue\";//导入公共组件\n  import TabControl from \"components/content/TabControl/TabControl\";\n  import GoodsList from \"components/content/goods/GoodsList\";\n  import Scroll from \"components/common/scroll/Scroll\";\n\n\n  import {getHomeMultidata,getHomeGoods} from \"network/home\";//网络请求 /*用大括号导出是因为，导出的时候没有用default*/\n\n\n  export default {\n    name: \"Home\",\n    components: {\n      NavBar,\n      HomeSwiper,\n      RecommendView,\n      FeatureView,\n      TabControl,\n      GoodsList,\n      Scroll\n    },\n    data() {\n      return {\n        banners: [],\n        recommends: [],\n        goods:{ //保存的是首页商品数据，包括流行，新款和精选 一起请求过来\n          'pop':{page:0, list:[]},\n          'new':{page:0, list:[]},\n          'sell':{page:0, list:[]},\n        },\n        currentType:'pop'\n      }\n    },\n    computed:{\n      showGoods(){\n        return this.goods[this.currentType].list\n      }\n    },\n    created() { /*首页创建之后发送网络请求,尽量只放一些主要逻辑，具体实现方法放到methods里面， 只要调用一下就行*/\n      //1.请求多个数据\n      this.getHomeMultidata(), //加了this,代表调用的是下面的方法，而不是传入的的网络请求getHomeMultidata\n      //2.请求商品数据\n      this.getHomeGoods('pop'),//一次性调用三次方法，分别把流行，新款和精选的第一页都请求过来\n      this.getHomeGoods('new'),\n      this.getHomeGoods('sell')\n    },\n    methods:{\n      //事件监听相关方法\n       tabClick(index){\n         switch(index){\n           case 0:\n             this.currentType='pop' //上面定义的变量\n             break\n           case 1:\n             this.currentType='new'\n             break\n           case 2:\n             this.currentType='sell'\n             break\n\n         }\n       },\n\n      //网络请求相关方法\n      getHomeMultidata(){\n      getHomeMultidata().then( //调用home.js封装的函数，获取url\n          res => { //res会拿到请求的结果\n            this.banners = res.data.data.banner.list;\n            this.recommends = res.data.data.recommend.list;\n          })},\n      getHomeGoods(type){ //传入type,类型就可以不写死，后面可以再传入\n        const page=this.goods[type].page+1//page也不要写死，做下拉操作的时候每次page要加1 goods是对象，获取对象属性是变量用[]\n          getHomeGoods(type,page).then( //传入类型是pop，页码为1的商品数据\n              res =>{ //res里面装得是类型为pop,page=1也就是30页的内容\n              this.goods[type].list.push(...res.data.data.list)//拿到data中类型为pop的空数组，压入page=1中的数据内容\n                this.goods[type].page+=1 //原来page=0,下次复用这个方法的时候应该使page加1\n              })\n    }}\n  }\n\n</script>\n\n<style scoped> /*scoped ,只会对当前的样式起效果*/\n  #home {\n    padding-top:44px;\n  }\n.home-nav {\n  background-color: var(--color-tint);\n  color: #f6f6f6;\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  z-index: 9;\n}\n.tab-control {\n  position: sticky; /*粘滞定位 没达到这个位置之前，默认static，到这个值时，会变成固定定位 */\n  top: 44px;\n  z-index: 9;\n}\n  .content {\n    height: 300px;\n    overflow:hidden;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}