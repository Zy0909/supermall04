{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DetailNavBar from \"./childComps/DetailNavBar\";\nimport DetailSwiper from \"./childComps/DetailSwiper\";\nimport DetailBaseInfo from \"./childComps/DetailBaseInfo\";\nimport DetailShopInfo from \"./childComps/DetailShopInfo\";\nimport DetailGoodsInfo from \"./childComps/DetailGoodsInfo\";\nimport DetailParamInfo from \"./childComps/DetailParamInfo\";\nimport DetailCommentInfo from \"./childComps/DetailCommentInfo\";\nimport GoodsList from \"components/content/goods/GoodsList\";\nimport Scroll from \"components/common/scroll/Scroll\";\nimport { getDetail, Goods, Shop, GoodsParam, getRecommend } from \"../../network/detail\"; //传入事件\n\nexport default {\n  name: \"Detail\",\n  components: {\n    DetailNavBar: DetailNavBar,\n    DetailSwiper: DetailSwiper,\n    DetailBaseInfo: DetailBaseInfo,\n    DetailShopInfo: DetailShopInfo,\n    Scroll: Scroll,\n    DetailGoodsInfo: DetailGoodsInfo,\n    DetailParamInfo: DetailParamInfo,\n    DetailCommentInfo: DetailCommentInfo,\n    GoodsList: GoodsList\n  },\n  data: function data() {\n    return {\n      iid: null,\n      topImages: [],\n      goods: {},\n      shop: {},\n      detailInfo: {},\n      paramInfo: {},\n      commentInfo: {},\n      recommends: [],\n      themeTopYs: [] //不应该写死，应该先获取各自的offsetTop值，参数，评论，推荐 再传入这个数组\n\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    //保存传入的iid\n    this.iid = this.$route.params.iid; //根据iid请求详情数据\n\n    getDetail(this.iid).then(function (res) {\n      //1获取顶部轮播图数据\n      // console.log(res);\n      var data1 = res.data.result;\n      _this.topImages = data1.itemInfo.topImages; //2获取商品信息\n\n      _this.goods = new Goods(data1.itemInfo, data1.columns, data1.shopInfo.services); //3创建店铺信息\n\n      _this.shop = new Shop(data1.shopInfo); //4保存商品详情数据\n\n      _this.detailInfo = data1.detailInfo; //5获取参数信息\n\n      _this.paramInfo = new GoodsParam(data1.itemParams.info, data1.itemParams.rule); //6获取评论信息,但有些用户没有，这里需要做一下判断\n\n      if (data1.rate.cRate !== 0) {\n        _this.commentInfo = data1.rate.list[0];\n      } //this.$nextTick( () => {//等到DetailParamsInfo全部渲染完成之后，才会回调一次下面的params函数\n      //根据最新的数据，对应的DOM已经渲染出来 但是图片没有加载完，目前获取到offsetTop不包含图片，不能跳转到对应位置\n      //this.themeTopYs=[];//每进来一次，都对这个新的空数组赋值\n      //this.themeTopYs.push(0);\n      //this.themeTopYs.push(this.$refs.params.$el.offsetTop);\n      //this.themeTopYs.push(this.$refs.comment.$el.offsetTop);\n      //this.themeTopYs.push(this.$refs.recommend.$el.offsetTop);\n      // console.log(this.themeTopYs);\n      // })\n\n    }); //请求推荐数据\n\n    getRecommend().then(function (res) {\n      _this.recommends = res.data.data.list;\n    });\n  },\n  mounted: function mounted() {//获取4个title的offsetTop不能再这里面获取，可能获取不到值，等渲染好之后，才会有值\n  },\n  updated: function updated() {//值不对，DOM没有渲染\n    //this.themeTopYs=[];//每进来一次，都对这个新的空数组赋值\n    // this.themeTopYs.push(0);\n    //this.themeTopYs.push(this.$refs.params.$el.offsetTop);\n    // this.themeTopYs.push(this.$refs.comment.$el.offsetTop);\n    // this.themeTopYs.push(this.$refs.recommend.$el.offsetTop);\n    //console.log(this.themeTopYs);\n  },\n  methods: {\n    imageLoad: function imageLoad() {\n      this.themeTopYs = []; //每进来一次，都对这个新的空数组赋值\n\n      this.themeTopYs.push(0);\n      this.themeTopYs.push(this.$refs.params.$el.offsetTop);\n      this.themeTopYs.push(this.$refs.comment.$el.offsetTop);\n      this.themeTopYs.push(this.$refs.recommend.$el.offsetTop);\n      console.log(this.themeTopYs);\n    },\n    titleClick: function titleClick(index) {\n      //console.log(index);\n      this.$refs.scroll.scrollTo(0, -this.themeTopYs[index], 100);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,wF,CAAA;;AACA;AACAA,gBADA;AAEAC;AACAC,8BADA;AAEAC,8BAFA;AAGAC,kCAHA;AAIAC,kCAJA;AAKAC,kBALA;AAMAC,oCANA;AAOAC,oCAPA;AAQAC,wCARA;AASAC;AATA,GAFA;AAaAC,MAbA,kBAaA;AACA;AACAC,eADA;AAEAC,mBAFA;AAGAC,eAHA;AAIAC,cAJA;AAKAC,oBALA;AAMAC,mBANA;AAOAC,qBAPA;AAQAC,oBARA;AASAC,oBATA,CASA;;AATA;AAWA,GAzBA;AA0BAC,SA1BA,qBA0BA;AAAA;;AACA;AACA,sCAFA,CAGA;;AACAC;AACA;AACA;AACA;AACA,iDAJA,CAKA;;AACA,sFANA,CAOA;;AACA,4CARA,CASA;;AACA,0CAVA,CAWA;;AACA,qFAZA,CAaA;;AACA;AACA;AACA,OAhBA,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,KA1BA,EAJA,CA+BA;;AACAC;AACA;AACA,KAFA;AAGA,GA7DA;AA8DAC,SA9DA,qBA8DA,CACA;AACA,GAhEA;AAiEAC,SAjEA,qBAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAxEA;AAyEAC;AACAC,aADA,uBACA;AAEA,2BAFA,CAEA;;AACA;AACA;AACA;AACA;AACAC;AACA,KATA;AAUAC,cAVA,sBAUAC,KAVA,EAUA;AACA;AACA;AACA;AAbA;AAzEA","names":["name","components","DetailNavBar","DetailSwiper","DetailBaseInfo","DetailShopInfo","Scroll","DetailGoodsInfo","DetailParamInfo","DetailCommentInfo","GoodsList","data","iid","topImages","goods","shop","detailInfo","paramInfo","commentInfo","recommends","themeTopYs","created","getDetail","getRecommend","mounted","updated","methods","imageLoad","console","titleClick","index"],"sourceRoot":"src/views/detail","sources":["Detail.vue"],"sourcesContent":["<template>\n<div id=\"detail\"><!--导航栏比较复杂，不能直接在这里做，要封装一个模块 -->\n <detail-nav-bar class=\"detail-nav\" @titleClick=\"titleClick\"></detail-nav-bar>\n  <scroll class=\"content\"\n          ref=\"scroll\"><!--把要滚动的区域直接放在scroll里面 必须有固定高度-->\n    <!--属性：topImages 传入值：top-images -->\n  <detail-swiper :top-images=\"topImages\"></detail-swiper><!--把topImages传过去-->\n  <detail-base-info :goods=\"goods\"></detail-base-info>\n  <detail-shop-info :shop=\"shop\"></detail-shop-info>\n    <detail-goods-info :detail-info=\"detailInfo\"></detail-goods-info>\n    <detail-param-info ref=\"params\" :param-info=\"paramInfo\"></detail-param-info>\n    <detail-comment-info ref=\"comment\" :comment-info=\"commentInfo\"></detail-comment-info>\n    <goods-list ref=\"recommend\" :goods=\"recommends\"></goods-list><!--把拿到的recommends传给GoodsList组件中的goods-->\n  </scroll>\n</div>\n</template>\n\n<script>\n  import DetailNavBar from \"./childComps/DetailNavBar\";\n  import DetailSwiper from \"./childComps/DetailSwiper\";\n  import DetailBaseInfo from \"./childComps/DetailBaseInfo\";\n  import DetailShopInfo from \"./childComps/DetailShopInfo\";\n  import DetailGoodsInfo from \"./childComps/DetailGoodsInfo\";\n  import DetailParamInfo from \"./childComps/DetailParamInfo\";\n  import DetailCommentInfo from \"./childComps/DetailCommentInfo\";\n  import GoodsList from \"components/content/goods/GoodsList\";\n\n  import Scroll from \"components/common/scroll/Scroll\";\n\n  import {getDetail,Goods,Shop,GoodsParam,getRecommend} from \"../../network/detail\"; //传入事件\n  export default {\n    name: \"Detail\",\n    components: {\n      DetailNavBar,\n      DetailSwiper,\n      DetailBaseInfo,\n      DetailShopInfo,\n      Scroll,\n      DetailGoodsInfo,\n      DetailParamInfo,\n      DetailCommentInfo,\n      GoodsList\n    },\n    data() {\n      return {\n        iid: null,\n        topImages: [],\n        goods: {},\n        shop: {},\n        detailInfo: {},\n        paramInfo: {},\n        commentInfo: {},\n        recommends: [],\n        themeTopYs: [] //不应该写死，应该先获取各自的offsetTop值，参数，评论，推荐 再传入这个数组\n      }\n    },\n    created() {\n      //保存传入的iid\n      this.iid = this.$route.params.iid\n      //根据iid请求详情数据\n      getDetail(this.iid).then(res => {\n        //1获取顶部轮播图数据\n        // console.log(res);\n        const data1 = res.data.result;\n        this.topImages = data1.itemInfo.topImages;\n        //2获取商品信息\n        this.goods = new Goods(data1.itemInfo, data1.columns, data1.shopInfo.services);\n        //3创建店铺信息\n        this.shop = new Shop(data1.shopInfo);\n        //4保存商品详情数据\n        this.detailInfo = data1.detailInfo;\n        //5获取参数信息\n        this.paramInfo = new GoodsParam(data1.itemParams.info, data1.itemParams.rule);\n        //6获取评论信息,但有些用户没有，这里需要做一下判断\n        if (data1.rate.cRate !== 0) {\n          this.commentInfo = data1.rate.list[0];\n        }\n        //this.$nextTick( () => {//等到DetailParamsInfo全部渲染完成之后，才会回调一次下面的params函数\n        //根据最新的数据，对应的DOM已经渲染出来 但是图片没有加载完，目前获取到offsetTop不包含图片，不能跳转到对应位置\n        //this.themeTopYs=[];//每进来一次，都对这个新的空数组赋值\n        //this.themeTopYs.push(0);\n        //this.themeTopYs.push(this.$refs.params.$el.offsetTop);\n        //this.themeTopYs.push(this.$refs.comment.$el.offsetTop);\n        //this.themeTopYs.push(this.$refs.recommend.$el.offsetTop);\n        // console.log(this.themeTopYs);\n        // })\n      })\n      //请求推荐数据\n      getRecommend().then(res => {\n        this.recommends = res.data.data.list\n      })\n    },\n    mounted() {\n      //获取4个title的offsetTop不能再这里面获取，可能获取不到值，等渲染好之后，才会有值\n    },\n    updated() {//值不对，DOM没有渲染\n      //this.themeTopYs=[];//每进来一次，都对这个新的空数组赋值\n      // this.themeTopYs.push(0);\n      //this.themeTopYs.push(this.$refs.params.$el.offsetTop);\n      // this.themeTopYs.push(this.$refs.comment.$el.offsetTop);\n      // this.themeTopYs.push(this.$refs.recommend.$el.offsetTop);\n      //console.log(this.themeTopYs);\n    },\n    methods: {\n     imageLoad() {\n\n       this.themeTopYs=[];//每进来一次，都对这个新的空数组赋值\n        this.themeTopYs.push(0);\n        this.themeTopYs.push(this.$refs.params.$el.offsetTop);\n        this.themeTopYs.push(this.$refs.comment.$el.offsetTop);\n        this.themeTopYs.push(this.$refs.recommend.$el.offsetTop);\n        console.log(this.themeTopYs);\n      },\n      titleClick(index) {\n        //console.log(index);\n        this.$refs.scroll.scrollTo(0, -this.themeTopYs[index], 100)\n      }\n    }\n  }\n</script>\n\n<style scoped>\n#detail {\n  position: relative;\n  z-index: 9;\n  background-color: #fff;\n  height: 100vh; /* 100%视图高度 */\n}\n.detail-nav {\n  position: relative;\n  z-index: 9;\n  background-color: #fff;\n}\n  .content {\n    height: calc(100% - 44px);\n    background-color: #fff;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}